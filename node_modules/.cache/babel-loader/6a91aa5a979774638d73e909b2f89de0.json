{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/home/jisha/samscloud-React.JS/src/Organization/Profile/components/Contact/Contact.js\";\nimport React, { Component } from 'react';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacInput } from 'components/SacInput';\nimport { SacSelect } from 'components/SacSelect';\nimport { SacOption } from 'components/SacOption';\nimport { SacButton } from 'components/SacButton';\nimport { SacText } from 'components/SacText';\nimport { formItemLayout } from 'commons/utils/defaultCssVariables';\nimport { upperCaseString } from 'commons/utils';\n\nclass Contact extends Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(SacForm, {\n      style: {\n        marginTop: '40px',\n        color: '#525a65'\n      },\n      layout: \"horizontal\",\n      title: React.createElement(SacText, {\n        style: {\n          color: '#525a65'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, upperCaseString('contact')),\n      edit: true,\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('contact name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), getFieldDecorator('contact_name', {\n      rules: [{\n        required: true,\n        message: 'Please enter your contact name!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('contact role'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), getFieldDecorator('contact_role', {\n      rules: [{\n        required: true,\n        message: 'Please add contact role!'\n      }]\n    })(React.createElement(SacSelect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(SacOption, {\n      value: \"test1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Test 1\"), React.createElement(SacOption, {\n      value: \"test2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Test 2\")))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('phone number'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), getFieldDecorator('phone_number', {\n      rules: [{\n        required: true,\n        message: 'Please enter your phone number!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please enter your email!'\n      }, {\n        type: 'email',\n        message: 'Please enter right email format!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('confirm email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), getFieldDecorator('confirm_email', {\n      rules: [{\n        required: true,\n        message: 'Please enter your email!'\n      }, {\n        type: 'email',\n        message: 'Please enter right email format!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(SacButton, {\n      type: \"link\",\n      style: {\n        display: 'flex',\n        fontSize: '20px',\n        justifyContent: 'space-between',\n        color: '#124DBB',\n        float: 'right',\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Add another contact\", React.createElement(_Icon, {\n      theme: \"filled\",\n      style: {\n        fontSize: '30px'\n      },\n      type: \"plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport const ContactForm = SacForm.create({\n  name: 'contact'\n})(Contact);","map":{"version":3,"sources":["/home/jisha/samscloud-React.JS/src/Organization/Profile/components/Contact/Contact.js"],"names":["React","Component","SacForm","SacFormItem","SacInput","SacSelect","SacOption","SacButton","SacText","formItemLayout","upperCaseString","Contact","render","getFieldDecorator","props","form","marginTop","color","rules","required","message","type","display","fontSize","justifyContent","float","padding","ContactForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Tooltip, Icon } from 'antd';\n\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacInput } from 'components/SacInput';\nimport { SacSelect } from 'components/SacSelect';\nimport { SacOption } from 'components/SacOption';\nimport { SacButton } from 'components/SacButton';\nimport { SacText } from 'components/SacText';\n\nimport { formItemLayout } from 'commons/utils/defaultCssVariables';\nimport { upperCaseString } from 'commons/utils';\n\nclass Contact extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <SacForm\n        style={{ marginTop: '40px', color: '#525a65' }}\n        layout='horizontal'\n        title={\n          <SacText style={{ color: '#525a65' }}>\n            {upperCaseString('contact')}\n          </SacText>\n        }\n        edit\n        divider\n      >\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('contact name')}\n        >\n          {getFieldDecorator('contact_name', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter your contact name!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('contact role')}\n        >\n          {getFieldDecorator('contact_role', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add contact role!'\n              }\n            ]\n          })(\n            <SacSelect>\n              <SacOption value='test1'>Test 1</SacOption>\n              <SacOption value='test2'>Test 2</SacOption>\n            </SacSelect>\n          )}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('phone number')}\n        >\n          {getFieldDecorator('phone_number', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter your phone number!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n        <SacFormItem {...formItemLayout} label={upperCaseString('email')}>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter your email!'\n              },\n              {\n                type: 'email',\n                message: 'Please enter right email format!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('confirm email')}\n        >\n          {getFieldDecorator('confirm_email', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter your email!'\n              },\n              {\n                type: 'email',\n                message: 'Please enter right email format!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n        <SacFormItem>\n          <SacButton\n            type='link'\n            style={{\n              display: 'flex',\n              fontSize: '20px',\n              justifyContent: 'space-between',\n              color: '#124DBB',\n              float: 'right',\n              padding: 0\n            }}\n          >\n            Add another contact\n            <Icon\n              theme='filled'\n              style={{ fontSize: '30px' }}\n              type='plus-circle'\n            />\n          </SacButton>\n        </SacFormItem>\n      </SacForm>\n    );\n  }\n}\n\nexport const ContactForm = SacForm.create({\n  name: 'contact'\n})(Contact);\n"]},"metadata":{},"sourceType":"module"}