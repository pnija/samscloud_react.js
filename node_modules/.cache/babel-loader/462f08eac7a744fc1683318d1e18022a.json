{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nvar _jsxFileName = \"/home/jisha/samscloud-React.JS/src/Organization/Profile/components/OrganizationAccountDetail/OrganizationAccountDetail.js\";\nimport React, { Component } from 'react';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacInput } from 'components/SacInput';\nimport { SacSelect } from 'components/SacSelect';\nimport { SacOption } from 'components/SacOption';\nimport { SacText } from 'components/SacText';\nimport { SacTextArea } from 'components/SacTextArea';\nimport { SacCheckboxGroup } from 'components/SacCheckboxGroup';\nimport { formItemLayout } from 'commons/utils/defaultCssVariables';\nimport { upperCaseString } from 'commons/utils';\n\nclass OrganizationAccountDetail extends Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const serviceTypeOptions = [{\n      label: 'Dispatch',\n      value: 'dispatch'\n    }, {\n      label: 'Alerts - SAMS',\n      value: 'alertsSAMS'\n    }];\n    const whoCanJoinOptions = [{\n      label: 'Publish',\n      value: 'publish'\n    }, {\n      label: 'Private',\n      value: 'private'\n    }];\n    return React.createElement(SacForm, {\n      style: {\n        marginTop: '40px',\n        color: '#525a65'\n      },\n      layout: \"horizontal\",\n      title: React.createElement(SacText, {\n        style: {\n          color: '#525a65'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, upperCaseString('Organization Account Details ')),\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('organization name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), getFieldDecorator('organization_name', {\n      rules: [{\n        required: true,\n        message: 'Please add organization name!'\n      }]\n    })(React.createElement(SacInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('phone number'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), getFieldDecorator('phone_number', {\n      rules: [{\n        required: true,\n        message: 'Please add phone name!'\n      }]\n    })(React.createElement(SacInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('organization type'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), getFieldDecorator('organization_type', {\n      rules: [{\n        required: true,\n        message: 'Please add organization type!'\n      }]\n    })(React.createElement(SacSelect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(SacOption, {\n      value: \"test1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Test 1\"), React.createElement(SacOption, {\n      value: \"test2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Test 2\")))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('description'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), getFieldDecorator('description', {\n      rules: [{\n        required: true,\n        message: 'Please add description!'\n      }]\n    })(React.createElement(SacTextArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('service type'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), getFieldDecorator('service_type', {\n      rules: [{\n        required: true,\n        message: 'Please add service type!'\n      }]\n    })(React.createElement(SacCheckboxGroup, {\n      options: serviceTypeOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('who can join'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), getFieldDecorator('who_can_join', {\n      rules: [{\n        required: true,\n        message: 'Please add who can join!'\n      }]\n    })(React.createElement(SacCheckboxGroup, {\n      options: whoCanJoinOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('Organizations email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), getFieldDecorator('org_email', {\n      rules: [{\n        required: true,\n        message: 'Please add organizations email!'\n      }, {\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('confirm email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), getFieldDecorator('confirm_org_email', {\n      rules: [{\n        required: true,\n        message: 'Please confirm your organizations email!'\n      }, {\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, Object.assign({}, formItemLayout, {\n      label: upperCaseString('url'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), getFieldDecorator('org_url', {\n      rules: [{\n        required: true,\n        message: 'Please confirm your organizations email!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport const OrganizationAccountDetailForm = SacForm.create({\n  name: 'organization_detail'\n})(OrganizationAccountDetail);","map":{"version":3,"sources":["/home/jisha/samscloud-React.JS/src/Organization/Profile/components/OrganizationAccountDetail/OrganizationAccountDetail.js"],"names":["React","Component","SacForm","SacFormItem","SacInput","SacSelect","SacOption","SacText","SacTextArea","SacCheckboxGroup","formItemLayout","upperCaseString","OrganizationAccountDetail","render","getFieldDecorator","props","form","serviceTypeOptions","label","value","whoCanJoinOptions","marginTop","color","rules","required","message","type","OrganizationAccountDetailForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { Tooltip, Icon } from 'antd';\n\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacInput } from 'components/SacInput';\nimport { SacSelect } from 'components/SacSelect';\nimport { SacOption } from 'components/SacOption';\nimport { SacText } from 'components/SacText';\nimport { SacTextArea } from 'components/SacTextArea';\nimport { SacCheckboxGroup } from 'components/SacCheckboxGroup';\n\nimport { formItemLayout } from 'commons/utils/defaultCssVariables';\nimport { upperCaseString } from 'commons/utils';\n\nclass OrganizationAccountDetail extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const serviceTypeOptions = [\n      { label: 'Dispatch', value: 'dispatch' },\n      { label: 'Alerts - SAMS', value: 'alertsSAMS' }\n    ];\n    const whoCanJoinOptions = [\n      { label: 'Publish', value: 'publish' },\n      { label: 'Private', value: 'private' }\n    ];\n    return (\n      <SacForm\n        style={{ marginTop: '40px', color: '#525a65' }}\n        layout='horizontal'\n        title={\n          <SacText style={{ color: '#525a65' }}>\n            {upperCaseString('Organization Account Details ')}\n          </SacText>\n        }\n        divider\n      >\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('organization name')}\n        >\n          {getFieldDecorator('organization_name', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add organization name!'\n              }\n            ]\n          })(<SacInput />)}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('phone number')}\n        >\n          {getFieldDecorator('phone_number', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add phone name!'\n              }\n            ]\n          })(<SacInput />)}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('organization type')}\n        >\n          {getFieldDecorator('organization_type', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add organization type!'\n              }\n            ]\n          })(\n            <SacSelect>\n              <SacOption value='test1'>Test 1</SacOption>\n              <SacOption value='test2'>Test 2</SacOption>\n            </SacSelect>\n          )}\n        </SacFormItem>\n        <SacFormItem {...formItemLayout} label={upperCaseString('description')}>\n          {getFieldDecorator('description', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add description!'\n              }\n            ]\n          })(<SacTextArea />)}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('service type')}\n        >\n          {getFieldDecorator('service_type', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add service type!'\n              }\n            ]\n          })(<SacCheckboxGroup options={serviceTypeOptions} />)}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('who can join')}\n        >\n          {getFieldDecorator('who_can_join', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add who can join!'\n              }\n            ]\n          })(<SacCheckboxGroup options={whoCanJoinOptions} />)}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('Organizations email')}\n        >\n          {getFieldDecorator('org_email', {\n            rules: [\n              {\n                required: true,\n                message: 'Please add organizations email!'\n              },\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n        <SacFormItem\n          {...formItemLayout}\n          label={upperCaseString('confirm email')}\n        >\n          {getFieldDecorator('confirm_org_email', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your organizations email!'\n              },\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n        <SacFormItem {...formItemLayout} label={upperCaseString('url')}>\n          {getFieldDecorator('org_url', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your organizations email!'\n              }\n            ]\n          })(\n            <SacInput\n              suffix={\n                <Tooltip title='Extra information'>\n                  <Icon\n                    type='question-circle'\n                    style={{ color: 'rgba(0,0,0,.45)' }}\n                  />\n                </Tooltip>\n              }\n            />\n          )}\n        </SacFormItem>\n      </SacForm>\n    );\n  }\n}\n\nexport const OrganizationAccountDetailForm = SacForm.create({\n  name: 'organization_detail'\n})(OrganizationAccountDetail);\n"]},"metadata":{},"sourceType":"module"}