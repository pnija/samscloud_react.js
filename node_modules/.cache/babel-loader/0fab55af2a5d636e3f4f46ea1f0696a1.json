{"ast":null,"code":"import _objectSpread from \"/home/jisha/samscloud-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nvar _jsxFileName = \"/home/jisha/samscloud-React.JS/src/Register/components/AddOrganization/AddOrganization.js\";\nimport React, { Component, Fragment } from 'react';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacInput } from 'components/SacInput';\nimport { SacButton } from 'components/SacButton';\nimport { SacSelect } from 'components/SacSelect';\nimport { SacOption } from 'components/SacOption';\nimport { formItemLayout, actionButton } from 'commons/utils/defaultCssVariables';\nimport { upperCaseString } from 'commons/utils';\n\nclass AddOrganization extends Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const _this$props = this.props,\n          verifyEmail = _this$props.verifyEmail,\n          verifyEmailError = _this$props.verifyEmailError;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: 'left',\n        fontSize: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, upperCaseString('Add your organization')), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(SacForm, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(SacFormItem, {\n      label: upperCaseString('organization name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, getFieldDecorator('organization_name', {\n      rules: [{\n        required: true,\n        message: 'Please organization name!'\n      }]\n    })(React.createElement(SacInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, {\n      label: upperCaseString('contact name'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, getFieldDecorator('contact_name', {\n      rules: [{\n        required: true,\n        message: 'Please add contact name!'\n      }]\n    })(React.createElement(SacInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, {\n      label: upperCaseString('contact role'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, getFieldDecorator('contact_role', {\n      rules: [{\n        required: true,\n        message: 'Please add contact role!'\n      }]\n    })(React.createElement(SacSelect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SacOption, {\n      value: \"test1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Test 1\"), React.createElement(SacOption, {\n      value: \"test2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Test 2\")))), React.createElement(SacFormItem, {\n      label: upperCaseString('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please add email!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(SacFormItem, {\n      label: upperCaseString('confirm email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, getFieldDecorator('confirm_email', {\n      rules: [{\n        required: true,\n        message: 'Please add confirm email!'\n      }]\n    })(React.createElement(SacInput, {\n      suffix: React.createElement(_Tooltip, {\n        title: \"Extra information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"question-circle\",\n        style: {\n          color: 'rgba(0,0,0,.45)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      style: {\n        textAlign: 'right',\n        fontSize: '16px',\n        paddingRight: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, upperCaseString(\"let's verify your email\")), React.createElement(_Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(SacFormItem, {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(SacButton, {\n      onClick: this.props.navigateLogin,\n      style: _objectSpread({\n        width: '150px'\n      }, actionButton),\n      type: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Back\"), React.createElement(SacButton, {\n      onClick: verifyEmail,\n      style: _objectSpread({\n        marginLeft: '10px',\n        width: '150px'\n      }, actionButton),\n      type: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Verify\"), React.createElement(SacButton, {\n      onClick: verifyEmailError,\n      style: _objectSpread({\n        marginLeft: '10px',\n        width: '150px'\n      }, actionButton),\n      type: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Error\"))));\n  }\n\n}\n\nexport const AddOrganizationForm = SacForm.create({\n  name: 'add_organization'\n})(AddOrganization);","map":{"version":3,"sources":["/home/jisha/samscloud-React.JS/src/Register/components/AddOrganization/AddOrganization.js"],"names":["React","Component","Fragment","SacForm","SacFormItem","SacInput","SacButton","SacSelect","SacOption","formItemLayout","actionButton","upperCaseString","AddOrganization","render","getFieldDecorator","props","form","verifyEmail","verifyEmailError","textAlign","fontSize","rules","required","message","color","paddingRight","display","justifyContent","navigateLogin","width","marginLeft","AddOrganizationForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Divider, Tooltip, Icon } from 'antd';\n\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacInput } from 'components/SacInput';\nimport { SacButton } from 'components/SacButton';\nimport { SacSelect } from 'components/SacSelect';\nimport { SacOption } from 'components/SacOption';\n\nimport {\n  formItemLayout,\n  actionButton\n} from 'commons/utils/defaultCssVariables';\nimport { upperCaseString } from 'commons/utils';\n\nclass AddOrganization extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { verifyEmail, verifyEmailError } = this.props;\n    return (\n      <Fragment>\n        <p style={{ textAlign: 'left', fontSize: '16px' }}>\n          {upperCaseString('Add your organization')}\n        </p>\n        <Divider />\n        <SacForm {...formItemLayout}>\n          <SacFormItem label={upperCaseString('organization name')}>\n            {getFieldDecorator('organization_name', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please organization name!'\n                }\n              ]\n            })(<SacInput />)}\n          </SacFormItem>\n          <SacFormItem label={upperCaseString('contact name')}>\n            {getFieldDecorator('contact_name', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please add contact name!'\n                }\n              ]\n            })(<SacInput />)}\n          </SacFormItem>\n          <SacFormItem label={upperCaseString('contact role')}>\n            {getFieldDecorator('contact_role', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please add contact role!'\n                }\n              ]\n            })(\n              <SacSelect>\n                <SacOption value='test1'>Test 1</SacOption>\n                <SacOption value='test2'>Test 2</SacOption>\n              </SacSelect>\n            )}\n          </SacFormItem>\n          <SacFormItem label={upperCaseString('email')}>\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please add email!'\n                }\n              ]\n            })(\n              <SacInput\n                suffix={\n                  <Tooltip title='Extra information'>\n                    <Icon\n                      type='question-circle'\n                      style={{ color: 'rgba(0,0,0,.45)' }}\n                    />\n                  </Tooltip>\n                }\n              />\n            )}\n          </SacFormItem>\n          <SacFormItem label={upperCaseString('confirm email')}>\n            {getFieldDecorator('confirm_email', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please add confirm email!'\n                }\n              ]\n            })(\n              <SacInput\n                suffix={\n                  <Tooltip title='Extra information'>\n                    <Icon\n                      type='question-circle'\n                      style={{ color: 'rgba(0,0,0,.45)' }}\n                    />\n                  </Tooltip>\n                }\n              />\n            )}\n          </SacFormItem>\n          <p\n            style={{\n              textAlign: 'right',\n              fontSize: '16px',\n              paddingRight: '30px'\n            }}\n          >\n            {upperCaseString(\"let's verify your email\")}\n          </p>\n          <Divider />\n          <SacFormItem style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <SacButton\n              onClick={this.props.navigateLogin}\n              style={{ width: '150px', ...actionButton }}\n              type='default'\n            >\n              Back\n            </SacButton>\n\n            <SacButton\n              onClick={verifyEmail}\n              style={{ marginLeft: '10px', width: '150px', ...actionButton }}\n              type='default'\n            >\n              Verify\n            </SacButton>\n            <SacButton\n              onClick={verifyEmailError}\n              style={{ marginLeft: '10px', width: '150px', ...actionButton }}\n              type='default'\n            >\n              Error\n            </SacButton>\n          </SacFormItem>\n        </SacForm>\n      </Fragment>\n    );\n  }\n}\n\nexport const AddOrganizationForm = SacForm.create({\n  name: 'add_organization'\n})(AddOrganization);\n"]},"metadata":{},"sourceType":"module"}