{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport _objectSpread from \"/home/jisha/samscloud-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/jisha/samscloud-React.JS/src/Organization/Address/components/CardLeft/components/Address/Address.js\";\nimport React, { Component, Fragment } from 'react';\nimport { SacRow } from 'components/SacRow';\nimport { SacCol } from 'components/SacCol';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacCard } from 'components/SacCard';\nimport { SacText } from 'components/SacText';\nimport { SacInput } from 'components/SacInput';\nimport { SacButton } from 'components/SacButton';\nimport { SacParagraph } from 'components/SacParagraph';\nimport { upperCaseString } from 'commons/utils';\nimport { primaryColor, actionButton, errorColorCode, avatarIconAddress, organizationAddressCard } from 'commons/utils/defaultCssVariables';\nimport avatar from \"assets/images/checkin.svg\";\nimport { SacSelect } from 'components/SacSelect';\nconst Meta = SacCard.Meta;\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editButtonClick = () => {\n      this.setState({\n        searchListShow: true,\n        addManuallyShow: false,\n        addManuallyButtonShow: true,\n        showAddressResult: false,\n        addressListShow: true,\n        edit: false,\n        addressNotFound: false\n      });\n    };\n\n    this.addManually = () => {\n      this.setState({\n        searchListShow: !this.state.searchListShow,\n        addManuallyShow: !this.state.addManuallyShow,\n        addressListShow: !this.state.addressListShow,\n        addManuallyButtonShow: !this.state.addManuallyButtonShow,\n        edit: false\n      });\n    };\n\n    this.searchClick = () => {\n      this.setState({\n        addressNotFound: true\n      });\n    };\n\n    this.state = {\n      searchListShow: false,\n      addManuallyShow: false,\n      addManuallyButtonShow: false,\n      showAddressResult: true,\n      addressListShow: false,\n      edit: true,\n      addressNotFound: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(SacCard, {\n      style: _objectSpread({}, organizationAddressCard, {\n        minHeight: '70px'\n      }),\n      bodyStyle: {\n        padding: '5px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      style: {\n        textAlign: 'left',\n        marginBottom: 0,\n        marginTop: '10px'\n      },\n      avatar: React.createElement(_Avatar, {\n        style: _objectSpread({\n          width: 26\n        }, avatarIconAddress),\n        size: \"small\",\n        src: avatar,\n        shape: \"square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }),\n      title: React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.edit ? React.createElement(SacText, {\n        style: {\n          marginBottom: 0,\n          color: '#000'\n        },\n        level: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, upperCaseString('address'), React.createElement(SacButton, {\n        onClick: this.editButtonClick,\n        style: {\n          float: 'right',\n          color: primaryColor,\n          width: 63,\n          height: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Edit\")) : React.createElement(SacText, {\n        style: {\n          marginBottom: 0,\n          color: '#000'\n        },\n        level: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, upperCaseString('address'), React.createElement(SacButton, {\n        onClick: this.searchClick,\n        style: {\n          float: 'right',\n          color: primaryColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Search\")), this.state.addManuallyButtonShow ? React.createElement(SacForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(SacFormItem, {\n        style: {\n          marginTop: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, getFieldDecorator('geo_fence', {\n        rules: []\n      })(React.createElement(SacInput, {\n        placeholder: upperCaseString('enter address'),\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })))) : this.state.showAddressResult && React.createElement(SacParagraph, {\n        style: {\n          marginTop: '10px',\n          fontSize: '14px',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#000',\n          fontFamily: 'OpenSans-Bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"7789 Southwest Freeway Houston,\"), \"TX, USA\"), this.state.addManuallyButtonShow && React.createElement(SacButton, {\n        style: {\n          height: '20px',\n          float: 'right',\n          paddingRight: 0,\n          textAlign: 'right',\n          marginTop: '-5px',\n          fontSize: '12px'\n        },\n        onClick: this.addManually,\n        type: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Add Manually\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), this.state.addressListShow && React.createElement(SacCard, {\n      style: {\n        minHeight: '95px',\n        marginTop: '-5px',\n        border: 'none',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)'\n      },\n      bodyStyle: {\n        padding: '15px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      description: React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(SacRow, {\n        style: {\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(SacCol, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"environment\",\n        theme: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })), React.createElement(SacCol, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(SacText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#000',\n          fontFamily: 'OpenSans-Bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"7789 Southwest Freeway\"), ' ', \"Houston,TX, USA\", ' '))), React.createElement(SacRow, {\n        style: {\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(SacCol, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"environment\",\n        theme: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(SacCol, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(SacText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#000',\n          fontFamily: 'OpenSans-Bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"7789 Southwest Freeway\"), ' ', \"Houston,TX, USA\", ' '))), React.createElement(SacRow, {\n        style: {\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(SacCol, {\n        span: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"environment\",\n        theme: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(SacCol, {\n        span: 22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(SacText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#000',\n          fontFamily: 'OpenSans-Bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"7789 Southwest Freeway\"), ' ', \"Houston,TX, USA\", ' ')))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), this.state.addManuallyShow && React.createElement(SacCard, {\n      style: {\n        minHeight: '65px',\n        marginTop: '-10px',\n        border: 'none',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)'\n      },\n      bodyStyle: {\n        padding: '15px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      style: {\n        textAlign: 'left',\n        marginBottom: 0\n      },\n      description: React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.state.addressNotFound ? React.createElement(SacText, {\n        style: {\n          color: errorColorCode\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Address Not Found\") : React.createElement(SacForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(SacFormItem, {\n        style: {\n          margin: '5px 0'\n        },\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, upperCaseString('street number'))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, getFieldDecorator('geo_fence', {\n        rules: []\n      })(React.createElement(SacInput, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }))), React.createElement(SacFormItem, {\n        style: {\n          margin: '5px 0'\n        },\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, upperCaseString('street name'))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, getFieldDecorator('geo_fence', {\n        rules: []\n      })(React.createElement(SacInput, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }))), React.createElement(SacFormItem, {\n        style: {\n          margin: '5px 0'\n        },\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, upperCaseString('city'))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, getFieldDecorator('geo_fence', {\n        rules: []\n      })(React.createElement(SacInput, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }))), React.createElement(SacFormItem, {\n        style: {\n          margin: '5px 0'\n        },\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, upperCaseString('state'))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, getFieldDecorator('state', {\n        rules: []\n      })(React.createElement(SacInput, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }))), React.createElement(SacFormItem, {\n        style: {\n          margin: '5px 0'\n        },\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, upperCaseString('zip'))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, getFieldDecorator('zip', {\n        rules: []\n      })(React.createElement(SacInput, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }))), React.createElement(SacFormItem, {\n        style: {\n          margin: '5px 0'\n        },\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        }, upperCaseString('country'))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, getFieldDecorator('country', {\n        rules: []\n      })(React.createElement(SacSelect, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }))), React.createElement(SacFormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(SacButton, {\n        style: _objectSpread({\n          float: 'right'\n        }, actionButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \"Save\")))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport const AddressForm = SacForm.create({\n  name: 'address'\n})(Address);","map":{"version":3,"sources":["/home/jisha/samscloud-React.JS/src/Organization/Address/components/CardLeft/components/Address/Address.js"],"names":["React","Component","Fragment","SacRow","SacCol","SacForm","SacFormItem","SacCard","SacText","SacInput","SacButton","SacParagraph","upperCaseString","primaryColor","actionButton","errorColorCode","avatarIconAddress","organizationAddressCard","SacSelect","Meta","Address","constructor","props","editButtonClick","setState","searchListShow","addManuallyShow","addManuallyButtonShow","showAddressResult","addressListShow","edit","addressNotFound","addManually","state","searchClick","render","getFieldDecorator","form","minHeight","padding","textAlign","marginBottom","marginTop","width","avatar","color","float","height","rules","fontSize","fontWeight","fontFamily","paddingRight","border","boxShadow","margin","AddressForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Icon, Tooltip, Avatar } from 'antd';\n\nimport { SacRow } from 'components/SacRow';\nimport { SacCol } from 'components/SacCol';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacCard } from 'components/SacCard';\nimport { SacText } from 'components/SacText';\nimport { SacInput } from 'components/SacInput';\nimport { SacButton } from 'components/SacButton';\nimport { SacParagraph } from 'components/SacParagraph';\n\nimport { upperCaseString } from 'commons/utils';\nimport {\n  primaryColor,\n  actionButton,\n  errorColorCode,\n  avatarIconAddress,\n  organizationAddressCard\n} from 'commons/utils/defaultCssVariables';\nimport avatar from 'assets/images/checkin.svg';\nimport { SacSelect } from 'components/SacSelect';\n\nconst { Meta } = SacCard;\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchListShow: false,\n      addManuallyShow: false,\n      addManuallyButtonShow: false,\n      showAddressResult: true,\n      addressListShow: false,\n      edit: true,\n      addressNotFound: false\n    };\n  }\n\n  editButtonClick = () => {\n    this.setState({\n      searchListShow: true,\n      addManuallyShow: false,\n      addManuallyButtonShow: true,\n      showAddressResult: false,\n      addressListShow: true,\n      edit: false,\n      addressNotFound: false\n    });\n  };\n\n  addManually = () => {\n    this.setState({\n      searchListShow: !this.state.searchListShow,\n      addManuallyShow: !this.state.addManuallyShow,\n      addressListShow: !this.state.addressListShow,\n      addManuallyButtonShow: !this.state.addManuallyButtonShow,\n      edit: false\n    });\n  };\n\n  searchClick = () => {\n    this.setState({\n      addressNotFound: true\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Fragment>\n        <SacCard\n          style={{\n            ...organizationAddressCard,\n            minHeight: '70px'\n          }}\n          bodyStyle={{\n            padding: '5px 10px'\n          }}\n        >\n          <Meta\n            style={{ textAlign: 'left', marginBottom: 0, marginTop: '10px' }}\n            avatar={\n              <Avatar\n                style={{\n                  width: 26,\n                  ...avatarIconAddress\n                }}\n                size='small'\n                src={avatar}\n                shape='square'\n              />\n            }\n            title={\n              <Fragment>\n                {this.state.edit ? (\n                  <SacText style={{ marginBottom: 0, color: '#000' }} level={4}>\n                    {upperCaseString('address')}\n                    <SacButton\n                      onClick={this.editButtonClick}\n                      style={{\n                        float: 'right',\n                        color: primaryColor,\n                        width: 63,\n                        height: 32\n                      }}\n                    >\n                      Edit\n                    </SacButton>\n                  </SacText>\n                ) : (\n                  <SacText style={{ marginBottom: 0, color: '#000' }} level={4}>\n                    {upperCaseString('address')}\n                    <SacButton\n                      onClick={this.searchClick}\n                      style={{ float: 'right', color: primaryColor }}\n                    >\n                      Search\n                    </SacButton>\n                  </SacText>\n                )}\n\n                {this.state.addManuallyButtonShow ? (\n                  <SacForm>\n                    <SacFormItem style={{ marginTop: '15px' }}>\n                      {getFieldDecorator('geo_fence', {\n                        rules: []\n                      })(\n                        <SacInput\n                          placeholder={upperCaseString('enter address')}\n                          suffix={\n                            <Tooltip title='Extra information'>\n                              <Icon\n                                type='question-circle'\n                                style={{ color: 'rgba(0,0,0,.45)' }}\n                              />\n                            </Tooltip>\n                          }\n                        />\n                      )}\n                    </SacFormItem>\n                  </SacForm>\n                ) : (\n                  this.state.showAddressResult && (\n                    <SacParagraph\n                      style={{\n                        marginTop: '10px',\n                        fontSize: '14px',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      <span\n                        style={{ color: '#000', fontFamily: 'OpenSans-Bold' }}\n                      >\n                        7789 Southwest Freeway Houston,\n                      </span>\n                      TX, USA\n                    </SacParagraph>\n                  )\n                )}\n                {this.state.addManuallyButtonShow && (\n                  <SacButton\n                    style={{\n                      height: '20px',\n                      float: 'right',\n                      paddingRight: 0,\n                      textAlign: 'right',\n                      marginTop: '-5px',\n                      fontSize: '12px'\n                    }}\n                    onClick={this.addManually}\n                    type='link'\n                  >\n                    Add Manually\n                  </SacButton>\n                )}\n              </Fragment>\n            }\n          />\n        </SacCard>\n        {this.state.addressListShow && (\n          <SacCard\n            style={{\n              minHeight: '95px',\n              marginTop: '-5px',\n              border: 'none',\n              boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)'\n            }}\n            bodyStyle={{ padding: '15px 10px' }}\n          >\n            <Meta\n              description={\n                <Fragment>\n                  <SacRow style={{ marginBottom: '20px' }}>\n                    <SacCol span={2}>\n                      <Icon type='environment' theme='filled' />\n                    </SacCol>\n                    <SacCol span={22}>\n                      <SacText>\n                        <span\n                          style={{ color: '#000', fontFamily: 'OpenSans-Bold' }}\n                        >\n                          7789 Southwest Freeway\n                        </span>{' '}\n                        Houston,TX, USA{' '}\n                      </SacText>\n                    </SacCol>\n                  </SacRow>\n                  <SacRow style={{ marginBottom: '20px' }}>\n                    <SacCol span={2}>\n                      <Icon type='environment' theme='filled' />\n                    </SacCol>\n                    <SacCol span={22}>\n                      <SacText>\n                        <span\n                          style={{ color: '#000', fontFamily: 'OpenSans-Bold' }}\n                        >\n                          7789 Southwest Freeway\n                        </span>{' '}\n                        Houston,TX, USA{' '}\n                      </SacText>\n                    </SacCol>\n                  </SacRow>\n                  <SacRow style={{ marginBottom: '20px' }}>\n                    <SacCol span={2}>\n                      <Icon type='environment' theme='filled' />\n                    </SacCol>\n                    <SacCol span={22}>\n                      <SacText>\n                        <span\n                          style={{ color: '#000', fontFamily: 'OpenSans-Bold' }}\n                        >\n                          7789 Southwest Freeway\n                        </span>{' '}\n                        Houston,TX, USA{' '}\n                      </SacText>\n                    </SacCol>\n                  </SacRow>\n                </Fragment>\n              }\n            />\n          </SacCard>\n        )}\n\n        {this.state.addManuallyShow && (\n          <SacCard\n            style={{\n              minHeight: '65px',\n              marginTop: '-10px',\n              border: 'none',\n              boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)'\n            }}\n            bodyStyle={{ padding: '15px 10px' }}\n          >\n            <Meta\n              style={{ textAlign: 'left', marginBottom: 0 }}\n              description={\n                <Fragment>\n                  {this.state.addressNotFound ? (\n                    <SacText style={{ color: errorColorCode }}>\n                      Address Not Found\n                    </SacText>\n                  ) : (\n                    <SacForm>\n                      <SacFormItem\n                        style={{ margin: '5px 0' }}\n                        label={\n                          <Fragment>\n                            <SacText style={{ color: '#a8acb2' }}>\n                              {upperCaseString('street number')}\n                            </SacText>\n                          </Fragment>\n                        }\n                      >\n                        {getFieldDecorator('geo_fence', {\n                          rules: []\n                        })(\n                          <SacInput\n                            suffix={\n                              <Tooltip title='Extra information'>\n                                <Icon\n                                  type='question-circle'\n                                  style={{ color: 'rgba(0,0,0,.45)' }}\n                                />\n                              </Tooltip>\n                            }\n                          />\n                        )}\n                      </SacFormItem>\n                      <SacFormItem\n                        style={{ margin: '5px 0' }}\n                        label={\n                          <Fragment>\n                            <SacText style={{ color: '#a8acb2' }}>\n                              {upperCaseString('street name')}\n                            </SacText>\n                          </Fragment>\n                        }\n                      >\n                        {getFieldDecorator('geo_fence', {\n                          rules: []\n                        })(\n                          <SacInput\n                            suffix={\n                              <Tooltip title='Extra information'>\n                                <Icon\n                                  type='question-circle'\n                                  style={{ color: 'rgba(0,0,0,.45)' }}\n                                />\n                              </Tooltip>\n                            }\n                          />\n                        )}\n                      </SacFormItem>\n                      <SacFormItem\n                        style={{ margin: '5px 0' }}\n                        label={\n                          <Fragment>\n                            <SacText style={{ color: '#a8acb2' }}>\n                              {upperCaseString('city')}\n                            </SacText>\n                          </Fragment>\n                        }\n                      >\n                        {getFieldDecorator('geo_fence', {\n                          rules: []\n                        })(\n                          <SacInput\n                            suffix={\n                              <Tooltip title='Extra information'>\n                                <Icon\n                                  type='question-circle'\n                                  style={{ color: 'rgba(0,0,0,.45)' }}\n                                />\n                              </Tooltip>\n                            }\n                          />\n                        )}\n                      </SacFormItem>\n                      <SacFormItem\n                        style={{ margin: '5px 0' }}\n                        label={\n                          <Fragment>\n                            <SacText style={{ color: '#a8acb2' }}>\n                              {upperCaseString('state')}\n                            </SacText>\n                          </Fragment>\n                        }\n                      >\n                        {getFieldDecorator('state', {\n                          rules: []\n                        })(\n                          <SacInput\n                            suffix={\n                              <Tooltip title='Extra information'>\n                                <Icon\n                                  type='question-circle'\n                                  style={{ color: 'rgba(0,0,0,.45)' }}\n                                />\n                              </Tooltip>\n                            }\n                          />\n                        )}\n                      </SacFormItem>\n                      <SacFormItem\n                        style={{ margin: '5px 0' }}\n                        label={\n                          <Fragment>\n                            <SacText style={{ color: '#a8acb2' }}>\n                              {upperCaseString('zip')}\n                            </SacText>\n                          </Fragment>\n                        }\n                      >\n                        {getFieldDecorator('zip', {\n                          rules: []\n                        })(\n                          <SacInput\n                            suffix={\n                              <Tooltip title='Extra information'>\n                                <Icon\n                                  type='question-circle'\n                                  style={{ color: 'rgba(0,0,0,.45)' }}\n                                />\n                              </Tooltip>\n                            }\n                          />\n                        )}\n                      </SacFormItem>\n                      <SacFormItem\n                        style={{ margin: '5px 0' }}\n                        label={\n                          <Fragment>\n                            <SacText style={{ color: '#a8acb2' }}>\n                              {upperCaseString('country')}\n                            </SacText>\n                          </Fragment>\n                        }\n                      >\n                        {getFieldDecorator('country', {\n                          rules: []\n                        })(\n                          <SacSelect\n                            suffix={\n                              <Tooltip title='Extra information'>\n                                <Icon\n                                  type='question-circle'\n                                  style={{ color: 'rgba(0,0,0,.45)' }}\n                                />\n                              </Tooltip>\n                            }\n                          />\n                        )}\n                      </SacFormItem>\n                      <SacFormItem>\n                        <SacButton\n                          style={{\n                            float: 'right',\n                            ...actionButton\n                          }}\n                        >\n                          Save\n                        </SacButton>\n                      </SacFormItem>\n                    </SacForm>\n                  )}\n                </Fragment>\n              }\n            />\n          </SacCard>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport const AddressForm = SacForm.create({\n  name: 'address'\n})(Address);\n"]},"metadata":{},"sourceType":"module"}