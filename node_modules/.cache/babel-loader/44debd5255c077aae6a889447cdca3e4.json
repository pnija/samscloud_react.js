{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport _objectSpread from \"/home/jisha/samscloud-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/jisha/samscloud-React.JS/src/Organization/Address/components/CardLeft/components/GeoFence/GeoFence.js\";\nimport React, { Component, Fragment } from 'react';\nimport { SacRow } from 'components/SacRow';\nimport { SacCol } from 'components/SacCol';\nimport { SacCard } from 'components/SacCard';\nimport { SacText } from 'components/SacText';\nimport { SacInput } from 'components/SacInput';\nimport { SacButton } from 'components/SacButton';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacParagraph } from 'components/SacParagraph';\nimport { upperCaseString } from 'commons/utils';\nimport { actionButton, avatarIconAddress, primaryColor, organizationAddressCard } from 'commons/utils/defaultCssVariables';\nimport './geofence.scss';\nimport mark from \"assets/images/markGeo.svg\";\nconst Meta = SacCard.Meta;\n\nclass GeoFence extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditClick = () => {\n      this.setState({\n        editIcon: false,\n        edit: true\n      });\n    };\n\n    this.handleSaveClick = () => {\n      this.setState({\n        switch: true\n      });\n    };\n\n    this.state = {\n      editIcon: true,\n      edit: false,\n      update: true,\n      switch: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(SacCard, {\n      className: \"geo-fence-card\",\n      style: _objectSpread({\n        marginTop: '10px'\n      }, organizationAddressCard),\n      bodyStyle: {\n        padding: '15px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      style: {\n        textAlign: 'left',\n        marginBottom: 0\n      },\n      avatar: React.createElement(_Avatar, {\n        style: _objectSpread({\n          paddingTop: 0\n        }, avatarIconAddress),\n        size: \"small\",\n        src: mark,\n        shape: \"square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      title: React.createElement(SacText, {\n        style: {\n          marginBottom: 0,\n          color: '#000'\n        },\n        level: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, upperCaseString('geo-fence'), this.props.cancel && React.createElement(SacButton, {\n        style: {\n          float: 'right',\n          color: primaryColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Cancel\"), this.state.editIcon && React.createElement(SacButton, {\n        onClick: this.handleEditClick,\n        shape: \"circle\",\n        icon: \"edit\",\n        style: {\n          color: '#000',\n          float: 'right',\n          border: '1px solid #000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })),\n      description: React.createElement(SacParagraph, {\n        style: {\n          color: '#000',\n          fontSize: 14,\n          fontWeight: 400,\n          marginTop: -5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontFamily: 'OpenSans-Bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Cy-Fair Grounds\"), this.state.switch && React.createElement(_Switch, {\n        style: {\n          float: 'right',\n          marginRight: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), this.state.edit && React.createElement(SacCard, {\n      className: \"card-geo-fence-edit\",\n      style: {\n        minHeight: '134px',\n        border: 'none',\n        boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)',\n        marginBottom: '10px',\n        marginTop: '-10px'\n      },\n      bodyStyle: {\n        padding: '15px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      style: {\n        textAlign: 'left',\n        marginBottom: 0\n      },\n      description: React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(SacForm, {\n        layout: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(SacFormItem, {\n        label: React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(SacText, {\n          style: {\n            color: '#a8acb2'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, upperCaseString('name this geo-fence')), React.createElement(_Switch, {\n          style: {\n            float: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, getFieldDecorator('geo_fence', {\n        rules: []\n      })(React.createElement(SacInput, {\n        suffix: React.createElement(_Tooltip, {\n          title: \"Extra information\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"question-circle\",\n          style: {\n            color: 'rgba(0,0,0,.45)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })))), this.state.update ? React.createElement(SacRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(SacCol, {\n        span: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(SacText, {\n        style: {\n          color: '#d0021b'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Your dispatch will receive incident notificaitons for this Geo-Fence\")), React.createElement(SacCol, {\n        span: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(SacButton, {\n        onClick: this.handleSaveClick,\n        style: _objectSpread({\n          float: 'right'\n        }, actionButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Save\"))) : React.createElement(SacRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(SacCol, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(SacText, {\n        style: {\n          color: '#d0021b'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Incident perimiter OFF you will not receive incident notifications.\")), React.createElement(SacCol, {\n        span: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(SacButton, {\n        style: {\n          float: 'right',\n          backgroundColor: '#043491',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Update\")), React.createElement(SacCol, {\n        span: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(SacButton, {\n        style: {\n          float: 'right',\n          backgroundColor: '#d0021b',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Delete\")))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport const GeoFenceForm = SacForm.create({\n  name: 'geofence'\n})(GeoFence);","map":{"version":3,"sources":["/home/jisha/samscloud-React.JS/src/Organization/Address/components/CardLeft/components/GeoFence/GeoFence.js"],"names":["React","Component","Fragment","SacRow","SacCol","SacCard","SacText","SacInput","SacButton","SacForm","SacFormItem","SacParagraph","upperCaseString","actionButton","avatarIconAddress","primaryColor","organizationAddressCard","Meta","GeoFence","constructor","props","handleEditClick","setState","editIcon","edit","handleSaveClick","switch","state","update","render","getFieldDecorator","form","marginTop","padding","textAlign","marginBottom","paddingTop","mark","color","cancel","float","border","fontSize","fontWeight","fontFamily","marginRight","minHeight","boxShadow","rules","backgroundColor","GeoFenceForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { Icon, Switch, Tooltip, Avatar } from 'antd';\n\nimport { SacRow } from 'components/SacRow';\nimport { SacCol } from 'components/SacCol';\nimport { SacCard } from 'components/SacCard';\nimport { SacText } from 'components/SacText';\nimport { SacInput } from 'components/SacInput';\nimport { SacButton } from 'components/SacButton';\nimport { SacForm } from 'components/SacForm';\nimport { SacFormItem } from 'components/SacFormItem';\nimport { SacParagraph } from 'components/SacParagraph';\n\nimport { upperCaseString } from 'commons/utils';\nimport {\n  actionButton,\n  avatarIconAddress,\n  primaryColor,\n  organizationAddressCard\n} from 'commons/utils/defaultCssVariables';\n\nimport './geofence.scss';\n\nimport mark from 'assets/images/markGeo.svg';\n\nconst { Meta } = SacCard;\n\nclass GeoFence extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editIcon: true,\n      edit: false,\n      update: true,\n      switch: false\n    };\n  }\n  handleEditClick = () => {\n    this.setState({\n      editIcon: false,\n      edit: true\n    });\n  };\n\n  handleSaveClick = () => {\n    this.setState({\n      switch: true\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Fragment>\n        <SacCard\n          className='geo-fence-card'\n          style={{ marginTop: '10px', ...organizationAddressCard }}\n          bodyStyle={{ padding: '15px 10px' }}\n        >\n          <Meta\n            style={{ textAlign: 'left', marginBottom: 0 }}\n            avatar={\n              <Avatar\n                style={{\n                  paddingTop: 0,\n                  ...avatarIconAddress\n                }}\n                size='small'\n                src={mark}\n                shape='square'\n              />\n            }\n            title={\n              <SacText style={{ marginBottom: 0, color: '#000' }} level={4}>\n                {upperCaseString('geo-fence')}\n                {this.props.cancel && (\n                  <SacButton style={{ float: 'right', color: primaryColor }}>\n                    Cancel\n                  </SacButton>\n                )}\n                {this.state.editIcon && (\n                  <SacButton\n                    onClick={this.handleEditClick}\n                    shape='circle'\n                    icon='edit'\n                    style={{\n                      color: '#000',\n                      float: 'right',\n                      border: '1px solid #000'\n                    }}\n                  />\n                )}\n              </SacText>\n            }\n            description={\n              <SacParagraph\n                style={{\n                  color: '#000',\n                  fontSize: 14,\n                  fontWeight: 400,\n                  marginTop: -5\n                }}\n              >\n                <span style={{ fontFamily: 'OpenSans-Bold' }}>\n                  Cy-Fair Grounds\n                </span>\n                {this.state.switch && (\n                  <Switch style={{ float: 'right', marginRight: '20px' }} />\n                )}\n              </SacParagraph>\n            }\n          />\n        </SacCard>\n        {this.state.edit && (\n          <SacCard\n            className='card-geo-fence-edit'\n            style={{\n              minHeight: '134px',\n              border: 'none',\n              boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.5)',\n              marginBottom: '10px',\n              marginTop: '-10px'\n            }}\n            bodyStyle={{ padding: '15px 10px' }}\n          >\n            <Meta\n              style={{ textAlign: 'left', marginBottom: 0 }}\n              description={\n                <Fragment>\n                  <SacForm layout='vertical'>\n                    <SacFormItem\n                      label={\n                        <Fragment>\n                          <SacText style={{ color: '#a8acb2' }}>\n                            {upperCaseString('name this geo-fence')}\n                          </SacText>\n                          <Switch style={{ float: 'right' }} />\n                        </Fragment>\n                      }\n                    >\n                      {getFieldDecorator('geo_fence', {\n                        rules: []\n                      })(\n                        <SacInput\n                          suffix={\n                            <Tooltip title='Extra information'>\n                              <Icon\n                                type='question-circle'\n                                style={{ color: 'rgba(0,0,0,.45)' }}\n                              />\n                            </Tooltip>\n                          }\n                        />\n                      )}\n                    </SacFormItem>\n                  </SacForm>\n                  {this.state.update ? (\n                    <SacRow>\n                      <SacCol span={18}>\n                        <SacText style={{ color: '#d0021b' }}>\n                          Your dispatch will receive incident notificaitons for\n                          this Geo-Fence\n                        </SacText>\n                      </SacCol>\n                      <SacCol span={6}>\n                        <SacButton\n                          onClick={this.handleSaveClick}\n                          style={{ float: 'right', ...actionButton }}\n                        >\n                          Save\n                        </SacButton>\n                      </SacCol>\n                    </SacRow>\n                  ) : (\n                    <SacRow>\n                      <SacCol span={12}>\n                        <SacText style={{ color: '#d0021b' }}>\n                          Incident perimiter OFF you will not receive incident\n                          notifications.\n                        </SacText>\n                      </SacCol>\n                      <SacCol span={6}>\n                        <SacButton\n                          style={{\n                            float: 'right',\n                            backgroundColor: '#043491',\n                            color: '#fff'\n                          }}\n                        >\n                          Update\n                        </SacButton>\n                      </SacCol>\n                      <SacCol span={6}>\n                        <SacButton\n                          style={{\n                            float: 'right',\n                            backgroundColor: '#d0021b',\n                            color: '#fff'\n                          }}\n                        >\n                          Delete\n                        </SacButton>\n                      </SacCol>\n                    </SacRow>\n                  )}\n                </Fragment>\n              }\n            />\n          </SacCard>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport const GeoFenceForm = SacForm.create({\n  name: 'geofence'\n})(GeoFence);\n"]},"metadata":{},"sourceType":"module"}